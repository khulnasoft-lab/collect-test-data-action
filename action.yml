name: 'Collect Test Data Action'
description: 'Collect test data and metadata and upload them to GCS.'
inputs:
  path:
    description: 'The path to the test output (such as a JUnit XML file).'
    required: true
  gcs_path:
    description: |
      The GCS bucket and optional prefix to upload the test data and metadata to.
      The format is bucket-name[/prefix]. You don't need to include the gs:// prefix.
    required: true
  gcp_project_id:
    description: 'The GCP project ID to use for authentication.'
    required: true
  workload_identity_provider:
    description: 'The workload identity provider to use for authentication.'
    required: true
  service_account_email:
    description: 'The service account email to use for authentication.'
    required: true
outputs:
  uploaded:
    description: 'The list of files uploaded to GCS.'
    value: ${{ steps.upload.outputs.uploaded }}
runs:
  using: 'composite'
  steps:
    - name: Create directory
      id: create-directory
      shell: bash
      run: mkdir -p test-data

    - name: Copy files
      id: copy-files
      shell: bash
      run: cp -r ${{ inputs.path }} test-data
    
    - name: Setup Python
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: '3.11'

    - name: Collect metadata
      id: collect-metadata
      shell: bash
      run: |
        python3 -uS ${{ github.action_path }}/bin/generate-metadata.py > test-data/metadata.json

    - name: Authenticate
      id: auth
      uses: google-github-actions/auth@55bd3a7c6e2ae7cf1877fd1ccb9d54c0503c457c # v2.1.2
      with:
        project_id: ${{ inputs.gcp_project_id }}
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account_email }}

    - name: Upload 
      id: upload
      uses: google-github-actions/upload-cloud-storage@22121cd842b0d185e042e28d969925b538c33d77 # v2.1.0
      with:
        path: test-data
        destination: ${{ inputs.gcs_path }}
